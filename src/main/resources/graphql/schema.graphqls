type Query{
    userWallets: [Wallet]
    walletById(id: String): Wallet
    currencyById(code: String): Currency
    currencies: [Currency]
}

type Mutation{
    addWallet(wallet: AddWalletRequestDTO): Wallet,
    walletTransfer(source: String!, destination: String!, amount: Float!): [WalletTransaction]
}

input AddWalletRequestDTO {
    currencyCode: String,
    balance: Float
}

type Wallet{
    id: String,
    userId: String,
    balance: Float,
    createdAt: Float,
    currency: Currency,
    walletTransactions: [WalletTransaction]
}

type Currency{
    code: String,
    name: String,
    salePrice: Float,
    purchasePrice: Float
}

type WalletTransaction{
    id: Int,
    timestamp: Float,
    amount: Float,
    wallet: Wallet,
    type: String,
    currentSaleCurrencyPrice: Float,
    currentPurchaseCurrencyPrice: Float
}